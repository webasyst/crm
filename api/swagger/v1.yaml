# validate https://editor.swagger.io/
openapi: 3.0.0
info:
  title: 'CRM API'
  version: 1.0.0
servers:
  - url: /api.php
    description: Current host server

paths:
  /crm.call.recordUrl:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get call record URL
      parameters:
        - in: query
          name: call_id
          description: Telephony provider native call identifier
          required: true
          schema:
            type: string
        - in: query
          name: record_id
          description: Telephony provider call record identifier
          required: true
          schema:
            type: string
        - in: query
          name: plugin
          description: Telephony provider plugin
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returns call record URL.
          content:
            application/json:
              schema:
                type: string
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /crm.contact.access.update:
    post:
      security:
        - BearerAuth: [ ]
      summary: Update access a contact
      parameters:
        - in: query
          name: id
          required: true
          description: Contact identifier
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  required:
                    - owner_id
                  properties:
                    owner_id:
                      type: array
                      description: Owner identifier
                      items:
                        type: integer
                - type: object
                  required:
                    - vault_id
                  properties:
                    vault_id:
                      type: integer
                      description: Vault identifier
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.contact.add:
    post:
      security:
        - BearerAuth: [ ]
      summary: Adding a contact
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - field
                properties:
                  field:
                    type: string
                    description: Field identifier
                  value:
                    oneOf:
                      - type: string
                        description: Field value
                      - type: array
                        description: Composite field data
                        items:
                          type: object
                          required:
                            - field
                          properties:
                            field:
                              type: string
                              description: Subfield identifier
                            value:
                              type: string
                              nullable: true
                              description: Subfield value
                  ext:
                    type: string
                    description: Field extention
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                type: integer
                description: Contact identifier
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error code
                  error_description:
                    type: string
                    description: Error description
                  error_fields:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: Field identifier
                        value:
                          type: string
                          description: Invalid value
                        code:
                          type: string
                          description: Error code
                        description:
                          type: string
                          description: Error description
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.contact.ban:
    post:
      security:
        - BearerAuth: [ ]
      summary: Ban contact
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: integer
                  description: Contact identifier
                reason:
                  type: string
                  description: Ban reason
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.contact.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Delete contact
      parameters:
        - in: query
          name: id[]
          description: Contact identifier
          required: true
          schema:
            type: array
            items:
              type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                    count:
                      type: integer
                      description: Count deleted contacts
                    message:
                      type: string
                      description: Message result
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.contact.info:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get contact info
      parameters:
        - in: query
          name: id
          description: Contact identifier
          schema:
            type: integer
          required: true
        - in: query
          name: userpic_size
          description: Required size of userpic in pixels
          schema:
            type: integer
      responses:
        200:
          description: Returns contact data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contact'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.contact.links:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get all application links for requested contact list
      parameters:
        - in: query
          name: id[]
          description: Array of contact identifiers
          schema:
            type: array
            items:
              type: integer
      responses:
        200:
          description: Returns contacts links data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  free_contacts:
                    type: array
                    description: List of contacts without links
                    items:
                      $ref: '#/components/schemas/contactMinimal'
                  linked_contacts:
                    type: array
                    description: List of contacts with links
                    items:
                      allOf:
                        - $ref: '#/components/schemas/contactMinimal'
                        - type: object
                          properties:
                            links:
                              type: array
                              description: Contact links
                              items:
                                type: object
                                properties:
                                  app:
                                    type: string
                                    description: Application name
                                  roles:
                                    type: array
                                    description: Contact roles in application
                                    items:
                                      type: object
                                      properties:
                                        role:
                                          type: string
                                          description: Role name
                                        count:
                                          type: integer
                                          description: Role links number
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.contact.list:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get contact list
      parameters:
        - in: query
          name: hash
          schema:
            type: string
          description: |
            Contacts set hash - filter for contact selection
            + empty string - get all contacts
            + id/ID1,ID2,ID3 - comma separated contact identifiers enumeration
            + segment/ID - contacts in specified segment
            + tag/ID - contacts marked specified tag
            + vault/ID - contacts in specified vault
            + responsible/ID - contacts allocated to specified responsible user
            + responsible/me - contacts allocated to current user
            + recent - contacts recently viewed or saved in favorites by current user
            + crmSearch/... - various CRM search queries
        - in: query
          name: fields[]
          description: |
            Contact fields need to get in list
            + jobtitle, company, email, phone, address:region, address:city - any configured contact field
            + tags - contact tag list
            + online_status - contact online status
            + last_action - contact last action data
            + acl - access level to contact data
            + is_pinned - marker that the contact is saved in favorites by current user
          schema:
            type: array
            items:
              type: string
        - in: query
          name: sort
          description: Contact field id to sort by (default is last_action)
          schema:
            type: string
            default: last_action
        - in: query
          name: asc
          description: |
            Sort order:
            + 0 - descending
            + 1 - ascending
          schema:
            type: integer
            enum:
              - 0
              - 1
        - in: query
          name: context_contact_id
          description: Context contact identifier
          schema:
            type: integer
        - in: query
          name: offset
          description: Contact list offset (default is 0)
          schema:
            type: integer
        - in: query
          name: limit
          description: Contact list portion size (default is 30, maximum is 500)
          schema:
            type: integer
        - in: query
          name: userpic_size
          description: Required size of userpic in pixels
          schema:
            type: integer
      responses:
        200:
          description: Returns contact list.
          content:
            application/json:
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      title:
                        type: string
                        description: Title contact list
                      hash:
                        type: string
                        description: Contacts filter hash
                      sort:
                        type: object
                        description: List sorting condition
                        properties:
                          field:
                            type: string
                            description: Contact field id to sort by
                          asc:
                            type: boolean
                            description: Sort in ascending order
                      offset:
                        type: integer
                        description: Contact list offset
                      limit:
                        type: integer
                        description: Contact list portion size
                      total_count:
                        type: integer
                        description: Number of contacts in the list
                      fields:
                        type: array
                        description: Requested contact fields
                        items:
                          type: string
                      columns:
                        type: array
                        description: Columns headers
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                              description: Contact field identifier
                            name:
                              type: string
                              description: Contact field readable name
                  data:
                    type: array
                    description: List of contacts
                    items:
                      $ref: '#/components/schemas/contactShort'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Contact not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.contact.patch:
    patch:
      security:
        - BearerAuth: [ ]
      summary: Partial update a set of contact fields
      parameters:
        - in: query
          name: id
          description: Contact ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - field
                  - value
                properties:
                  field:
                    type: string
                    description: Field identifier
                  value:
                    oneOf:
                      - type: string
                        description: Field value
                      - type: array
                        description: Composite field data
                        items:
                          type: object
                          required:
                            - field
                          properties:
                            field:
                              type: string
                              description: Subfield identifier
                            value:
                              type: string
                              nullable: true
                              description: Subfield value
                  ext:
                    type: string
                    description: Field extention
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/fieldData'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error code
                  error_description:
                    type: string
                    description: Error description
                  error_fields:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: Field identifier
                        value:
                          type: string
                          description: Invalid value
                        code:
                          type: string
                          description: Error code
                        description:
                          type: string
                          description: Error description
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Contact not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.contact.pin:
    post:
      security:
        - BearerAuth: [ ]
      summary: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: Contact ID
              required:
                - id
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Contact not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.contact.recent:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get contact recent and pinned lists
      parameters:
        - in: query
          name: userpic_size
          description: Required size of userpic in pixels
          schema:
            type: integer
            default: 32
        - in: query
          name: limit
          description: Recent limit (default 10)
          schema:
            type: integer
            default: 10
      responses:
        200:
          description: Returns contact recent and pinned list.
          content:
            application/json:
              schema:
                type: object
                properties:
                  recent:
                    type: array
                    description: Recent contact list
                    items:
                      $ref: '#/components/schemas/contactMinimal'
                  pinned:
                    type: array
                    description: Pinned contact list
                    items:
                      $ref: '#/components/schemas/contactMinimal'
        500:
          description: Internal server error.
  /crm.contact.responsible.update:
    post:
      security:
        - BearerAuth: [ ]
      summary: Назначение/удаление ответственного за контакт
      parameters:
        - in: query
          name: id
          description: Contact ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: User ID
              required:
                - user_id
      responses:
        200:
          description: 'OK'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Contact not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.contact.tabs:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get contact tabs
      parameters:
        - in: query
          name: id
          description: Contact ID
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Returns contact tabs.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: String tab identifier
                    app_id:
                      type: string
                      description: String identifier of the application providing the tab content
                    title:
                      type: string
                      description: Tab title
                    count:
                      type: integer
                      nullable: true
                      description: Counter
                    url:
                      type: string
                      format: uri
                      nullable: true
                      description: URL frame with content
                    html:
                      type: string
                      nullable: true
                      description: The contents of the tab if not the frame
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.contact.unban:
    post:
      security:
        - BearerAuth: [ ]
      summary: Ban contact
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: integer
                  description: Contact identifier
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.contact.unpin:
    post:
      security:
        - BearerAuth: [ ]
      summary: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: Contact ID
              required:
                - id
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Contact not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.contact.update:
    put:
      security:
        - BearerAuth: [ ]
      summary: Update contact
      parameters:
        - in: query
          name: id
          description: Contact ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - field
                properties:
                  field:
                    type: string
                    description: Field identifier
                  value:
                    oneOf:
                      - type: string
                        description: Field value
                      - type: array
                        description: Composite field data
                        items:
                          type: object
                          required:
                            - field
                          properties:
                            field:
                              type: string
                              description: Subfield identifier
                            value:
                              type: string
                              nullable: true
                              description: Subfield value
                  ext:
                    type: string
                    description: Field extention
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error code
                  error_description:
                    type: string
                    description: Error description
                  error_fields:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: Field identifier
                        value:
                          type: string
                          description: Invalid value
                        code:
                          type: string
                          description: Error code
                        description:
                          type: string
                          description: Error description
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.contact.userpic:
    post:
      security:
        - BearerAuth: [ ]
      summary: Update userpic contact
      parameters:
        - in: query
          name: id
          required: true
          description: Contact identifier
          schema:
            type: integer
        - in: query
          name: userpic_size
          description: Size thumb picture
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - photo
                - content_type
              properties:
                photo:
                  type: string
                  format: byte
                  nullable: false
                  description: Picture file binary content
                content_type:
                  type: string
                  description: Picture file MIME type
                  enum:
                    - image/jpeg
                    - image/png
                crop:
                  type: object
                  description: Crop data
                  properties:
                    x:
                      type: integer
                      description: X координата левого верхнего угла области кропа
                    y:
                      type: integer
                      description: Y координата левого верхнего угла области кропа
                    size:
                      type: integer
                      description: Размер квадрата области кропа
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  thumb:
                    type: string
                    format: uri
                    description: ''
                  original:
                    type: string
                    format: uri
                    description: ''
                  original_crop:
                    type: string
                    format: uri
                    description: ''
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.conversation.deal:
    post:
      security:
        - BearerAuth: [ ]
      summary: Обновление связи переписки со сделкой
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - conversation_id
                - deal_id
              properties:
                conversation_id:
                  type: integer
                  description: Conversation identifier
                deal_id:
                  type: integer
                  description: Deal identifier
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.conversation.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Conversation delete
      parameters:
        - in: query
          name: id
          description: Conversation ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ban_contact:
                  type: boolean
                  description: Is need to ban contact
                reason:
                  type: string
                  description: Ban reason
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.conversation.info:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get conversation
      parameters:
        - in: query
          name: id
          description: Conversation identifier
          schema:
            type: integer
          required: true
        - in: query
          name: limit
          description: Message list portion size (default is 30, maximum is 500)
          schema:
            type: integer
        - in: query
          name: userpic_size
          description: Required size of userpic in pixels
          schema:
            type: integer
      responses:
        200:
          description: Returns conversation info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  conversation:
                    $ref: '#/components/schemas/conversation'
                  params:
                    type: object
                    properties:
                      limit:
                        type: integer
                        description: Message list portion size
                      total_count:
                        type: integer
                        description: Total number of messages in conversation
                  messages:
                    type: array
                    items:
                      $ref: '#/components/schemas/message'
                  can_edit:
                    type: boolean
                    description: Marker that current user can edit the conversation
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.conversation.list:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get conversation list
      parameters:
        - in: query
          name: offset
          description: Conversation list offset (default is 0)
          schema:
            type: integer
        - in: query
          name: limit
          description: Conversation list portion size (default is 30, maximum is 500)
          schema:
            type: integer
        - in: query
          name: transport
          description: |
            Filter condition by conversation transport type. Can be one of:
            + 'im' for messengers only conversations
            + 'email' for email only conversations
          schema:
            type: string
            enum:
              - im
              - email
        - in: query
          name: user_id
          description: |
            Filter condition by responsible user of conversation. Can be one of:
            + positive integer for filter by responsible user identifier
            + '0' for conversations without responsible
          schema:
            type: integer
        - in: query
          name: contact_id
          description: Filter condition by client contact of conversation
          schema:
            type: integer
        - in: query
          name: userpic_size
          description: Required size of userpic in pixels
          schema:
            type: integer
      responses:
        200:
          description: Returns conversation list.
          content:
            application/json:
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      offset:
                        type: integer
                        description: Conversation list offset
                      limit:
                        type: integer
                        description: Conversation list portion size
                      total_count:
                        type: integer
                        description: Number of contacts in set
                      filter:
                        type: object
                        description: Current list filter
                        properties:
                          transport:
                            type: string
                            description: Transport type
                            enum:
                              - im
                              - email
                          user_id:
                            type: integer
                            description: Responsible user identifier
                          contact_id:
                            type: integer
                            description: Client contact identifier
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/conversation'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.conversation.read:
    post:
      security:
        - BearerAuth: [ ]
      summary: Маркировка переписки как прочитанной
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: integer
                  description: Conversation identifier
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.conversation.unread:
    post:
      security:
        - BearerAuth: [ ]
      summary: Маркировка переписки как непрочитанной
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: integer
                  description: Conversation identifier
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.conversation.users.list:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get users responsible to any conversation
      parameters:
        - in: query
          name: userpic_size
          description: Required size of userpic in pixels
          schema:
            type: integer
      responses:
        200:
          description: Returns users responsible to any conversation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contactMinimal'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.currency.list:
    get:
      security:
        - BearerAuth: [ ]
      summary: List currencies
      responses:
        200:
          description: Returns list currencies
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      description: ISO code currency
                      type: string
                    name:
                      description: Locale name currency
                      type: string
                    is_primary:
                      description: Flag primary currency
                      type: boolean
                    rate:
                      description: Rate currency
                      type: number
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.deal.add:
    post:
      security:
        - BearerAuth: [ ]
      summary: Create new deal
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - stage_id
                - name
                - contact_id
              properties:
                stage_id:
                  type: integer
                  description: Deal stage identifier
                name:
                  type: string
                  description: Deal name
                description:
                  type: string
                  format: text
                  description: Deal description (html)
                  nullable: true
                expected_date:
                  type: string
                  format: date
                  description: Date of expected deal close
                  nullable: true
                amount:
                  type: number
                  description: Deal expected amount
                  nullable: true
                currency_id:
                  type: string
                  description: Deal currency
                  nullable: true
                contact_id:
                  type: integer
                  description: Main client contact identifier
                contact_label:
                  type: string
                  description: Role in deal (deal participant label)
                  nullable: true
                user_contact_id:
                  type: integer
                  description: Responsible user contact identifier
                fields:
                  type: array
                  items:
                    type: object
                    required:
                      - field
                      - value
                    properties:
                      field:
                        type: string
                        description: Field identifier
                      value:
                        type: string
                        description: Field value
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                type: integer
                description: Created deal identifier
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error code
                  error_description:
                    type: string
                    description: Error description
                  error_fields:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: Field identifier
                        value:
                          type: string
                          description: Invalid value
                        code:
                          type: string
                          description: Error code
                        description:
                          type: string
                          description: Error description
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.deal.close:
    post:
      security:
        - BearerAuth: [ ]
      summary: Closing the deal
      parameters:
        - in: query
          name: id
          description: Deal ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - status_id
              properties:
                status_id:
                  type: string
                  description: Deal close status
                  enum:
                    - WON
                    - LOST
                lost_id:
                  type: integer
                  description: Deal lost reason variant identifier
                lost_text:
                  type: string
                  description: Deal lost reason description
                force:
                  type: boolean
                  description: Flag to force deal stage change without confirmation
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        409:
          description: Action needs additional data or confirmation
          content:
            application/json:
              schema:
                type: object
                properties:
                  dialog_html:
                    type: string
                    description: Content to show to confirm action (html code)
                  order_id:
                    type: integer
                    description: Shop-Script order identifier
                    nullable: true
                  action_id:
                    type: string
                    description: Shop-Script workflow action identifier
                    nullable: true
        500:
          description: Internal server error.
  /crm.deal.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Delete deal
      parameters:
        - in: query
          name: id
          description: Deal identifier. In case of deleting one deal.
          schema:
            type: integer
        - in: query
          name: id[]
          description: Array of deal identifiers. In case of deals bulk deleting.
          schema:
            type: array
            items:
              type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: array
                  description: Array of deal identifiers. In case of deals bulk deleting.
                  items:
                    type: integer
      responses:
        204:
          description: One deal has been successfully deleted.
        200:
          description: Many deals have been successfully deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  deleted:
                    description: Deleted deal identifiers
                    type: array
                    items:
                      type: integer
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.deal.info:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get deal data
      parameters:
        - in: query
          name: id
          description: Deal identifier
          schema:
            type: integer
          required: true
        - in: query
          name: userpic_size
          description: Required size of userpic in pixels
          schema:
            type: integer
        - in: query
          name: with_aux_info
          description: Flag to get additional deal info from external apps & plugins (call hook)
          schema:
            type: integer
            enum:
              - 0
              - 1
            default: 0
      responses:
        200:
          description: Returns deal info.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deal'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.deal.list:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get deal list
      parameters:
        - in: query
          name: user_id
          description: User identifier
          schema:
            type: integer
        - in: query
          name: contact_id
          description: Customer contact identifier
          schema:
            type: integer
        - in: query
          name: search
          description: Deal name or deal customer contact name
          schema:
            type: string
        - in: query
          name: fields[]
          description: |
            Deal fields need to get in list
            + any configured deal field
            + last_action - deal last action data
            + is_pinned - marker that the deal is saved in favorites
          schema:
            type: array
            items:
              type: string
        - in: query
          name: funnel
          description: Funnel identifier to filter by
          schema:
            type: integer
        - in: query
          name: stage
          schema:
            oneOf:
              - type: integer
                description: Funnel stage identifier to filter by
              - type: string
                enum:
                  - won
                  - lost
                description: |
                  Deal status identifier to filter by
                  + won: won deals only
                  + lost: lost deals only
        - in: query
          name: tag
          description: Tag identifier to filter by
          schema:
            type: integer
        - in: query
          name: reminder[]
          description: Reminder state identifiers to filter by
          schema:
            type: array
            items:
              type: string
              enum:
                - no
                - burn
                - overdue
                - actual
        - in: query
          name: unread_only
          description: Show deals with unread messages only
          schema:
            type: integer
            enum:
              - 0
              - 1
        - in: query
          name: pinned_only
          description: Show deals saved in favorites only
          schema:
            type: integer
            enum:
              - 0
              - 1
        - in: query
          name: sort
          description: Field id to sort by
          schema:
            type: string
            enum:
              - stage_id
              - create_datetime
              - reminder_datetime
              - name
              - amount
              - user_name
              - last_action
        - in: query
          name: asc
          description: |
            Sort order:
            + 0 - descending
            + 1 - ascending
          schema:
            type: integer
            enum:
              - 0
              - 1
        - in: query
          name: offset
          description: List offset
          schema:
            type: integer
        - in: query
          name: limit
          description: List portion size (default is 30, maximum is 500)
          schema:
            type: integer
        - in: query
          name: userpic_size
          description: Required size of userpic in pixels
          schema:
            type: integer
      responses:
        200:
          description: Returns deal list.
          content:
            application/json:
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      user_id:
                        type: integer
                        description: User identifier to filter by
                      contact_id:
                        type: integer
                        description: Contact identifier to filter by
                      search:
                        type: string
                        description: Search query
                      pinned_only:
                        type: boolean
                        description: Show deals saved in favorites only
                      sort:
                        type: string
                        description: Deal field id to sort by
                      asc:
                        type: boolean
                        description: Sort in ascending order
                      page:
                        type: integer
                        description: Pagination portion number
                      limit:
                        type: integer
                        description: Pagination portion size
                      offset:
                        type: integer
                        description: List offset
                      total_count:
                        type: integer
                        description: Number of deals in set
                      filter:
                        type: object
                        properties:
                          funnel_id:
                            type: integer
                            description: Funnel identifier used to filter deal list
                          stage_id:
                            type: integer
                            description: Funnel stage identifier used to filter deal list
                          tag_id:
                            type: integer
                            description: Tag identifier used to filter deal list
                          reminder_state:
                            type: array
                            description: Remainer states used to filter deal list
                            items:
                              type: string
                              enum:
                                - no
                                - overdue
                                - unread
                                - burn
                                - actual
                      fields:
                        type: array
                        description: Requested deal fields
                        items:
                          type: string
                  data:
                    type: array
                    description: List of deals
                    items:
                      $ref: '#/components/schemas/dealListRow'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.deal.lostreason.list:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get deal lost reasons list
      parameters:
        - in: query
          name: funnel_id
          description: Funnel ID
          required: false
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  required:
                    type: boolean
                    description: Request a reason for lost deals
                  allow_custom:
                    type: boolean
                    description: Allow entering free-form reasons in addition to predefined options
                  lostreasons:
                    type: array
                    description: lost reasons list
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: Lost ID record
                        name:
                          type: string
                          description: Lost name
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.deal.move:
    post:
      security:
        - BearerAuth: [ ]
      summary: Moving the deal to a new stage
      parameters:
        - in: query
          name: id
          description: Deal ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - stage_id
              properties:
                stage_id:
                  type: integer
                  description: Stage ID
                force:
                  type: boolean
                  description: Flag to force deal stage change without confirmation
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        409:
          description: Action needs additional data or confirmation
          content:
            application/json:
              schema:
                type: object
                properties:
                  dialog_html:
                    type: string
                    description: Content to show to confirm action (html code)
                  order_id:
                    type: integer
                    description: Shop-Script order identifier
                    nullable: true
                  action_id:
                    type: string
                    description: Shop-Script workflow action identifier
                    nullable: true
        500:
          description: Internal server error.
  /crm.deal.participant.add:
    post:
      security:
        - BearerAuth: [ ]
      summary: Adding a deal participant
      parameters:
        - in: query
          name: userpic_size
          description: Required size of userpic in pixels
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - deal_id
                - contact_id
                - role_id
              properties:
                deal_id:
                  type: integer
                  description: Deal ID
                contact_id:
                  type: integer
                  description: Contact ID
                role_id:
                  type: string
                  description: Contact role ID
                  enum:
                    - CLIENT
                    - USER
                label:
                  type: string
                  description: Label contact
                is_responsible:
                  type: boolean
                  description: ''
                force:
                  type: boolean
                  description: ''
                replace_contact_id:
                  type: integer
                  description: Contact ID
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      contact:
                        $ref: '#/components/schemas/dealClient'
                  - type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/dealUser'
                      user_contact_id:
                        type: integer
                        description: ''
                      rights:
                        $ref: '#/components/schemas/dealUserRights'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        409:
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  dialog_html:
                    type: string
                    description: HTML dialog
        500:
          description: Internal server error.
  /crm.deal.participant.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Delete a deal participant
      parameters:
        - in: query
          name: deal_id
          description: Deal ID
          required: true
          schema:
            type: integer
        - in: query
          name: contact_id
          description: Contact ID
          required: true
          schema:
            type: integer
        - in: query
          name: role_id
          description: Contact role ID
          required: true
          schema:
            type: string
            enum:
              - CLIENT
              - USER
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                force:
                  type: boolean
                  description: ''
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        409:
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  dialog_html:
                    type: string
                    description: HTML dialog
        500:
          description: Internal server error.
  /crm.deal.patch:
    patch:
      security:
        - BearerAuth: [ ]
      summary: Partial update a set of deal fields
      parameters:
        - in: query
          name: id
          description: Deal ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - field
                  - value
                properties:
                  field:
                    type: string
                    description: Field identifier
                  value:
                    type: string
                    description: Field value
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/fieldData'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error code
                  error_description:
                    type: string
                    description: Error description
                  error_fields:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: Field identifier
                        value:
                          type: string
                          description: Invalid value
                        code:
                          type: string
                          description: Error code
                        description:
                          type: string
                          description: Error description
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.deal.pin:
    post:
      security:
        - BearerAuth: [ ]
      summary: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: integer
                  description: Deal ID
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Contact not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.deal.recent:
    get:
      security:
        - BearerAuth: [ ]
      summary: Deal recent and favorite list
      parameters:
        - in: query
          name: userpic_size
          description: Required size of userpic in pixels
          schema:
            type: integer
        - in: query
          name: limit
          description: ''
          schema:
            type: integer
            default: 10
      responses:
        200:
          description: Returns deal recent and favorite list
          content:
            application/json:
              schema:
                type: object
                properties:
                  recent:
                    type: array
                    description: Recent deal list
                    items:
                      $ref: '#/components/schemas/dealPin'
                  pinned:
                    type: array
                    description: Pinned deal list
                    items:
                      $ref: '#/components/schemas/dealPin'
        500:
          description: Internal server error.
  /crm.deal.reopen:
    post:
      security:
        - BearerAuth: [ ]
      summary: Deal reopen
      parameters:
        - in: query
          name: id
          description: Deal ID
          required: true
          schema:
            type: integer
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.deal.role.list:
    get:
      security:
        - BearerAuth: [ ]
      summary: Получение списка ролей в сделках
      parameters:
        - in: query
          name: scope
          description: ''
          required: true
          schema:
            type: string
            enum:
              - CLIENT
              - USER
      responses:
        200:
          description: Returns deal role list
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.deal.shopaction:
    post:
      security:
        - BearerAuth: [ ]
      summary: Action workflow shop order
      parameters:
        - in: query
          name: order_id
          description: Order ID
          required: true
          schema:
            type: integer
        - in: query
          name: action_id
          description: Action ID workflow
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              additionalProperties: true
      responses:
        200:
          description: Returns deal info.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deal'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        409:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.deal.unpin:
    post:
      security:
        - BearerAuth: [ ]
      summary: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: integer
                  description: Deal ID
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Contact not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.field.list:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get field list
      parameters:
        - in: query
          name: scope
          description: Field scope
          schema:
            type: string
            enum:
              - person
              - company
              - deal
              - contact
          required: true
      responses:
        200:
          description: Returns field list.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/field'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.file.add:
    post:
      security:
        - BearerAuth: [ ]
      summary: Добавление файла к сделке или контакту
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: byte
                  nullable: false
                  description: File binary content
                file_name:
                  type: string
                  description: File name
                deal_id:
                  type: integer
                  description: Deal ID
                contact_id:
                  type: integer
                  description: Contact ID
                comment:
                  type: string
                  format: text
                  description: Comment
              required:
                - file
                - file_name
      responses:
        200:
          description: Returns data file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.file.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Delete file
      parameters:
        - in: query
          name: id
          description: File identifier
          required: true
          schema:
            type: integer
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.file.download:
    get:
      security:
        - BearerAuth: [ ]
      summary: File download
      parameters:
        - in: query
          name: id
          description: File identifier
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            image/*:
              schema:
                type: string
                format: binary
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.file.list:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get files list
      parameters:
        - in: query
          name: contact_id
          description: Contact ID
          schema:
            type: integer
        - in: query
          name: deal_id
          description: Deal ID
          schema:
            type: integer
        - in: query
          name: userpic_size
          description: Size of userpic in pixels
          schema:
            type: integer
      responses:
        200:
          description: Returns files data.
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/file'
                    - type: object
                      properties:
                        creator:
                          $ref: '#/components/schemas/contactMinimal'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.funnel.list:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get all funnels structure
      parameters:
        - in: query
          name: with_count
          description: Count deals in funnels and stages
          schema:
            type: integer
            enum:
              - 1
              - 0
      responses:
        200:
          description: Returns funnels.
          content:
            application/json:
              schema:
                type: array
                description: Funnels list
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Funnel identifier
                    name:
                      type: string
                      description: Funnel name
                    sort:
                      type: integer
                      description: Funnel sort in list field
                    color:
                      type: string
                      description: Funnel color
                    open_color:
                      type: string
                      description: Funnel deal open color
                    close_color:
                      type: string
                      description: Funnel deal close color
                    deal_count:
                      type: integer
                      description: Number of deals in funnel
                    stages:
                      type: array
                      description: Stages in funnel
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: Stage identifier
                          funnel_id:
                            type: integer
                            description: Stage funnel identifier
                          name:
                            type: string
                            description: Stage name
                          number:
                            type: integer
                            description: Serial number of the stage in funnel
                          color:
                            type: string
                            description: Stage color
                          limit_hours:
                            type: integer
                            description: Interval in hours deal can be in stage
                            nullable: true
                          deal_count:
                            type: integer
                            description: Number of deals in stage
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.history:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get logs
      parameters:
        - in: query
          name: min_id
          description: ''
          schema:
            type: integer
        - in: query
          name: max_id
          description: History offset to log identifier (default is 0)
          schema:
            type: integer
        - in: query
          name: limit
          description: History portion size (default is 30, maximum is 500)
          schema:
            type: integer
        - in: query
          name: contact_id
          description: Contact identifier
          schema:
            type: integer
        - in: query
          name: user_id
          description: User identifier
          schema:
            type: integer
        - in: query
          name: deal_id
          description: Deal identifier
          schema:
            type: integer
        - in: query
          name: filters[]
          description: Object types to filter log
          schema:
            type: array
            items:
              type: string
              enum:
                - reminders
                - notes
                - files
                - invoices
                - deals
                - contacts
                - messages
                - calls
                - orders
            nullable: true
        - in: query
          name: userpic_size
          description: Required size of userpic in pixels
          schema:
            type: integer
      responses:
        200:
          description: Returns log.
          content:
            application/json:
              schema:
                type: object
                properties:
                  log:
                    type: array
                    items:
                      $ref: '#/components/schemas/logRecord'
                  count:
                    type: integer
                    description: Number of log records
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.invoice.info:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get single message
      parameters:
        - in: query
          name: id
          description: Invoice identifier
          required: true
          schema:
            type: integer
        - in: query
          name: userpic_size
          description: Required size of userpic in pixels
          schema:
            type: integer
            default: 32
      responses:
        200:
          description: Returns invoice info.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoiceFullInfo'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Invoice not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.invoice.list:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get invoices
      parameters:
        - in: query
          name: contact_id
          description: Client contact identifier. Select invoices assotiated with specified client.
          schema:
            type: integer
        - in: query
          name: userpic_size
          description: Required size of userpic in pixels
          schema:
            type: integer
            default: 32
        - in: query
          name: deal_id
          description: Deal identifier. Select invoices assotiated with specified dieal.
          schema:
            type: integer
        - in: query
          name: number
          description: Invoice number. Select invloices whose numbers contain a specified string (search by number substring).
          schema:
            type: string
        - in: query
          name: state_id
          description: Invoice state identifier. Select invloices of specified state only.
          schema:
            type: string
            enum:
              - PENDING
              - PAID
              - REFUNDED
              - ARCHIVED
              - DRAFT
              - PROCESSING
        - in: query
          name: sort
          description: Field id to sort by
          schema:
            type: string
            enum:
              - create_datetime
              - update_datetime
              - payment_datetime
        - in: query
          name: asc
          description:  |
            Sort order:
            + 0 - descending
            + 1 - ascending
          schema:
            type: integer
            enum:
              - 0
              - 1
        - in: query
          name: offset
          description: List offset (default is 0)
          schema:
            type: integer
        - in: query
          name: limit
          description: List portion size (default is 30, maximum is 500)
          schema:
            type: integer
      responses:
        200:
          description: Returns invoices list.
          content:
            application/json:
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      sort:
                        type: object
                        description: List sorting condition
                        properties:
                          field:
                            type: string
                            description: Contact field id to sort by
                          asc:
                            type: boolean
                            description: Sort in ascending order
                      offset:
                        type: integer
                        description: Contact list offset
                      limit:
                        type: integer
                        description: Contact list portion size
                      total_count:
                        type: integer
                        description: Number of contacts in the list
                  data:
                    type: array
                    description: List of invoices
                    items:
                      $ref: '#/components/schemas/invoice'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.invoice.transaction:
    post:
      security:
        - BearerAuth: [ ]
      summary: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: Invoice ID
                action:
                  type: string
                  description: Invoice action identifier
                  enum:
                    - accept
                    - refuse
                    - refund
                    - paid
                    - activate
                    - delete
                    - archive
                    - cancel
                    - draft
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.message.info:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get single message
      parameters:
        - in: query
          name: id
          description: Message identifier
          required: true
          schema:
            type: integer
        - in: query
          name: userpic_size
          description: Required size of userpic in pixels
          schema:
            type: integer
            default: 32
      responses:
        200:
          description: Returns message info.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.message.list:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get message list
      parameters:
        - in: query
          name: conversation_id
          description: Conversation identifier
          required: true
          schema:
            type: integer
        - in: query
          name: max_id
          description: Message identifier to list offset (default is 0)
          schema:
            type: integer
        - in: query
          name: min_id
          description: Message identifier to list update
          schema:
            type: integer
        - in: query
          name: limit
          description: List portion size (default is 30, maximum is 500)
          schema:
            type: integer
        - in: query
          name: userpic_size
          description: Required size of userpic in pixels
          schema:
            type: integer
            default: 32
      responses:
        200:
          description: Returns messages list.
          content:
            application/json:
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      conversation_id:
                        type: integer
                        description: Conversation identifier
                      limit:
                        type: integer
                        description: List portion size
                      max_id:
                        type: integer
                        description: Message identifier to list offset
                      min_id:
                        type: integer
                        description: Message identifier to list update
                      total_count:
                        type: integer
                        description: Total number of messages in the list
                  messages:
                    type: array
                    items:
                      $ref: '#/components/schemas/message'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.message.send:
    post:
      security:
        - BearerAuth: [ ]
      summary: Send message
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - reply_message_id
              properties:
                reply_message_id:
                  type: integer
                  description: Identifier of the message for reply to
                body:
                  type: string
                  format: text
                  description: Message content
                content_type:
                  description: Content type
                  default: plain-text
                  type: string
                  enum:
                    - plain-text
                    - html
                attachments:
                  type: array
                  description: Files
                  items:
                    type: object
                    properties:
                      file:
                        type: string
                        format: byte
                        description: File binary content
                      file_name:
                        type: string
                        description: File name
                      type:
                        type: string
                        description: File type (image or any other)
                        default: OTHER
                        enum:
                          - IMAGE
                          - OTHER
      responses:
        200:
          description: Returns message info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message_id:
                    type: integer
                    description: Message ID
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.message.sendEmail:
    post:
      security:
        - BearerAuth: [ ]
      summary: Send email to client
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - contact_id
                - subject
                - body
              properties:
                contact_id:
                  type: integer
                  description: Contact identifier
                email_to:
                  type: string
                  format: email
                  description: Email to
                deal_id:
                  type: integer
                  description: Deal identifier
                subject:
                  type: string
                  description: Email subject
                body:
                  type: string
                  format: text
                  description: Email body
                content_type:
                  description: Content type
                  default: plain-text
                  type: string
                  enum:
                    - plain-text
                    - html
                attachments:
                  type: array
                  description: Files
                  items:
                    type: object
                    properties:
                      file:
                        type: string
                        format: byte
                        description: File binary content
                      file_name:
                        type: string
                        description: File name
      responses:
        200:
          description: Returns message info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message_id:
                    type: integer
                    description: Message ID
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.message.sendFile:
    post:
      security:
        - BearerAuth: [ ]
      summary: Send file to client via messenger
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reply_message_id:
                  type: integer
                  description: Identifier of the message for reply to
                file:
                  type: string
                  format: byte
                  description: File binary content
                file_name:
                  type: string
                  description: File name
                type:
                  type: string
                  description: File type (image or any other)
                  default: OTHER
                  enum:
                    - IMAGE
                    - OTHER
              required:
                - reply_message_id
                - file
                - file_name
      responses:
        200:
          description: Returns file info.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message_id:
                    type: integer
                    description: Message ID
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.note.add:
    post:
      security:
        - BearerAuth: [ ]
      summary: Добавление заметки к сделке или контакту
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contact_id:
                  type: integer
                  description: Contact ID
                deal_id:
                  type: integer
                  description: Deal ID
                content:
                  type: string
                  format: text
                  description: Note content
              required:
                - content
      responses:
        201:
          description: Returns note ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Note identifier
                required:
                  - id
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.note.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Delete note
      parameters:
        - in: query
          name: id
          description: Note identifier
          required: true
          schema:
            type: integer
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.note.list:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get notes list
      parameters:
        - in: query
          name: contact_id
          description: Contact ID
          schema:
            type: integer
        - in: query
          name: deal_id
          description: Deal ID
          schema:
            type: integer
        - in: query
          name: userpic_size
          description: Size of userpic in pixels
          schema:
            type: integer
        - in: query
          name: with_files
          description: Flag to get files also
          schema:
            type: integer
            enum:
              - 0
              - 1
            default: 0
      responses:
        200:
          description: Returns notes list.
          content:
            application/json:
              schema:
                type: array
                description: Returns notes list
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Note ID
                    create_datetime:
                      type: string
                      format: date-time
                      description: Create date
                    creator:
                      $ref: '#/components/schemas/contactMinimal'
                    content:
                      type: string
                      description: Content note
                    files:
                      type: array
                      items:
                        $ref: '#/components/schemas/file'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.note.update:
    put:
      security:
        - BearerAuth: [ ]
      summary: Редактирование заметки
      parameters:
        - in: query
          name: id
          required: true
          description: Note identifier
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  format: text
                  description: Note content
              required:
                - content
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Note not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.push.data:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get configured push provider type
      responses:
        200:
          description: Returns push provider config data.
          content:
            application/json:
              schema:
                type: object
                required:
                  - provider
                properties:
                  provider:
                    type: string
                    enum:
                      - none
                      - onesignal
                      - firebase
                    description: |
                      Configured push service provider. Possible values:
                      + onesignal: OneSignal
                      + firebase: Firebase
        403:
          description: Access denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Note not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.push.enable:
    post:
      security:
        - BearerAuth: [ ]
      summary: Enable push notifications
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  required:
                    - firebase_client_token
                  properties:
                    firebase_client_token:
                      type: string
                      description: Firebase Client Registration Token
                - type: object
                  required:
                    - onesignal_app_id
                    - onesignal_player_id
                  properties:
                    onesignal_app_id:
                      type: string
                      description: OneSignal Application ID
                    onesignal_player_id:
                      type: string
                      description: OneSignal Client ID
      responses:
        204:
          description: OK
        403:
          description: Access denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        400:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.push.disable:
    post:
      security:
        - BearerAuth: [ ]
      summary: Switch off push notifications
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  required:
                    - firebase_client_token
                  properties:
                    firebase_client_token:
                      type: string
                      description: Firebase Client Registration Token
                - type: object
                  required:
                    - onesignal_app_id
                    - onesignal_player_id
                  properties:
                    onesignal_app_id:
                      type: string
                      description: OneSignal Application ID
                    onesignal_player_id:
                      type: string
                      description: OneSignal Client ID
      responses:
        204:
          description: OK
        403:
          description: Access denied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        400:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.region.list:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get country regions
      parameters:
        - in: query
          name: country
          description: Country ISO code
          required: true
          schema:
            type: string
      responses:
        200:
          description: Returns regions list.
          content:
            application/json:
              schema:
                type: array
                description: Regions list
                items:
                  type: object
                  properties:
                    code:
                      type: string
                      description: Region code
                    name:
                      type: string
                      description: Region name
                    is_favorite:
                      type: boolean
                      description: Is favorite region
        500:
          description: Internal server error.
  /crm.reminder.add:
    post:
      security:
        - BearerAuth: [ ]
      summary: Добавление напоминания
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contact_id:
                  type: integer
                  description: Contact ID
                deal_id:
                  type: integer
                  description: Deal ID
                user_id:
                  type: integer
                  description: User ID
                content:
                  type: string
                  format: text
                  description: Content reminder
                type:
                  type: string
                  description: Reminder type
                  default: OTHER
                  enum:
                    - MEETING
                    - CALL
                    - MESSAGE
                    - OTHER
                due_date:
                  type: string
                  format: date
                  nullable: true
                  description: Дата в формате YYYY-MM-DD, когда надо выполнить
                due_datetime:
                  type: string
                  format: date-time
                  description: Дата и время, когда надо выполнить, в формате ISO 8601 (YYYY-MM-DDTHH:MM:SS.000000Z)
      responses:
        201:
          description: Returns reminder identifier
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Reminder identifier
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.reminder.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Delete reminder
      parameters:
        - in: query
          name: id
          description: Reminder identifier
          required: true
          schema:
            type: integer
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.reminder.done:
    post:
      security:
        - BearerAuth: [ ]
      summary: Маркировка напоминания как выполненного
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: Reminder identifier
              required:
                - id
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.reminder.list:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get reminders
      parameters:
        - in: query
          name: is_completed
          description: Flag to get completed reminders. Default behaviour returns non completed reminders.
          schema:
            type: integer
            enum:
              - 1
              - 0
        - in: query
          name: is_my_only
          description: Flag to get reminders assigned to current user only.
          schema:
            type: integer
            enum:
              - 1
              - 0
        - in: query
          name: user_id
          description: User contact identifier. Select reminders assigned to specified user.
          schema:
            type: integer
        - in: query
          name: contact_id
          description: Client contact identifier. Select reminders associated with specified client.
          schema:
            type: integer
        - in: query
          name: deal_id
          description: Deal identifier. Select reminders assotiated with specified dieal.
          schema:
            type: integer
        - in: query
          name: id[]
          description: Reminder identifiers. Select listed reminders only.
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: type
          description: Reminder type. Select reminders of specified type only.
          schema:
            type: string
            enum:
              - MEETING
              - CALL
              - MESSAGE
              - OTHER
        - in: query
          name: due_date
          description: Maximum of reminders due date. Select reminders with due date non after specified.
          schema:
            type: string
            format: date
        - in: query
          name: offset
          description: List offset
          schema:
            type: integer
        - in: query
          name: limit
          description: List portion size (default is 30, maximum is 500)
          schema:
            type: integer
      responses:
        200:
          description: Returns reminders list.
          content:
            application/json:
              schema:
                type: object
                properties:
                  params:
                    type: object
                    properties:
                      total_count:
                        type: integer
                      offset:
                        type: integer
                      limit:
                        type: integer
                  data:
                    type: array
                    description: Reminders list
                    items:
                      $ref: '#/components/schemas/reminder'
        500:
          description: Internal server error.
  /crm.reminder.undone:
    post:
      security:
        - BearerAuth: [ ]
      summary: Снятие маркировки выполнения с напоминания
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: Reminder identifier
              required:
                - id
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.reminder.update:
    put:
      security:
        - BearerAuth: [ ]
      summary: Изменение напоминания
      parameters:
        - in: query
          name: id
          required: true
          description: Reminder identifier
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contact_id:
                  type: integer
                  description: Contact ID
                deal_id:
                  type: integer
                  description: Deal ID
                user_id:
                  type: integer
                  description: User ID
                content:
                  type: string
                  format: text
                  description: Content reminder
                type:
                  type: string
                  description: Reminder type
                  default: OTHER
                  enum:
                    - MEETING
                    - CALL
                    - MESSAGE
                    - OTHER
                due_date:
                  type: string
                  format: date
                  nullable: true
                  description: Дата, когда надо выполнить, в формате YYYY-MM-DD
                due_datetime:
                  type: string
                  format: date-time
                  description: Дата и время, когда надо выполнить, в формате ISO 8601 (YYYY-MM-DDTHH:MM:SS.000000Z)
              required:
                - user_id
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.responsible.assign:
    post:
      security:
        - BearerAuth: [ ]
      summary: Assign responsible
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    user_id:
                      type: integer
                      description: Responsible user identifier or 0 for remove responsibility
                    contact_id:
                      type: array
                      description: Contact list identifiers
                      items:
                        type: integer
                        description: Contact identifier
                - type: object
                  properties:
                    user_id:
                      type: integer
                      description: Responsible user identifier or 0 for remove responsibility
                    deal_id:
                      type: array
                      description: Deal list identifiers
                      items:
                        type: integer
                        description: Deal identifier
                - type: object
                  properties:
                    user_id:
                      type: integer
                      description: Responsible user identifier or 0 for remove responsibility
                    conversation_id:
                      type: array
                      description: Conversation list identifiers
                      items:
                        type: integer
                        description: Conversation identifier
      responses:
        200:
          description: Returns message
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Description
                  absent_contacts:
                    type: array
                    description: Absent contacts
                  unsuccess_contacts:
                    type: array
                    items:
                      $ref: '#/components/schemas/contactMinimal'
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Contact not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.responsible.list:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get users responsible list
      parameters:
        - in: query
          name: scope
          description: ''
          schema:
            type: string
            default: contact
            enum:
              - contact
              - deal
              - conversation
        - in: query
          name: userpic_size
          description: Required size of userpic in pixels
          schema:
            type: integer
            default: 32
      responses:
        200:
          description: Returns users responsible list.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    count:
                      type: integer
                      description: Number of contacts counter
                    responsible:
                      $ref: '#/components/schemas/contactMinimal'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.segment.add:
    post:
      security:
        - BearerAuth: [ ]
      summary: Добавление нового сегмента
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                type:
                  type: string
                  description: ''
                  enum:
                    - category
                    - search
                icon:
                  type: string
                  description: ''
                shared:
                  type: integer
                  description: ''
                  enum:
                    - 0
                    - 1
                hash:
                  type: string
                  description: ''
              required:
                - name
      responses:
        200:
          description: Returns segment info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/segment'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.segment.archive:
    post:
      security:
        - BearerAuth: [ ]
      summary: Отправить сегмент в архив, восстановить сегмент из архива
      requestBody:
        content: 
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: integer
                  description: Segment identifier
                action:
                  type: string
                  description: Actions segment
                  enum:
                    - archive
                    - restore
      responses:
        200:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.segment.delete:
    delete:
      security:
        - BearerAuth: [ ]
      summary: Удаление сегмента
      parameters:
        - in: query
          name: id
          description: Segment identifier
          schema:
            type: integer
      responses:
        204:
          description: OK
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.segment.exclude:
    post:
      security:
        - BearerAuth: [ ]
      summary: Удаление контактов из сегмента
      parameters:
        - in: query
          name: id
          description: Segment identifier
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                description: Array contact identifiers
      responses:
        200:
          description: Returned contacts counter
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    description: Contact count
                    type: integer
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.segment.include:
    post:
      security:
        - BearerAuth: [ ]
      summary: Добавление контактов в сегмент
      parameters:
        - in: query
          name: id
          description: Segment identifier
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: Array contact identifiers
              items:
                type: integer
      responses:
        200:
          description: Returned contacts counter
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    description: Contact count
                    type: integer
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.segment.list:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get all segments visible by current user
      responses:
        200:
          description: Returns segments list.
          content:
            application/json:
              schema:
                type: object
                properties:
                  shared:
                    description: Shared segments list
                    type: array
                    items:
                      $ref: '#/components/schemas/segment'
                  my:
                    description: Personal segments list
                    type: array
                    items:
                      $ref: '#/components/schemas/segment'
                  archived:
                    type: object
                    description: Archived segments
                    properties:
                      shared:
                        description: Archived shared segments list
                        type: array
                        items:
                          $ref: '#/components/schemas/segment'
                      my:
                        description: Archived personal segments list
                        type: array
                        items:
                          $ref: '#/components/schemas/segment'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.segment.order:
    post:
      security:
        - BearerAuth: [ ]
      summary: Reorder segments in list
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - ids
                - scope
              properties:
                ids:
                  type: array
                  items:
                    type: integer
                    description: Array of segment identifiers
                scope:
                  type: string
                  description: |
                    Scope of ordering segments
                    + shared: shared segments
                    + my: personal segments
                  enum:
                    - shared
                    - my
      responses:
        204:
          description: No content
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.segment.update:
    put:
      security:
        - BearerAuth: [ ]
      summary: Обновление сегмента
      parameters:
        - in: query
          name: id
          description: Segment identifier
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                icon:
                  type: string
                  description: ''
                shared:
                  type: integer
                  description: ''
                  enum:
                    - 0
                    - 1
                hash:
                  type: string
                  description: ''
      responses:
        200:
          description: Returns segment info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/segment'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.tag.assign:
    post:
      security:
        - BearerAuth: [ ]
      summary: Назначение тегов на контакты и сделки
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    tag:
                      type: array
                      items:
                        type: string
                        description: Tag name
                    contact_id:
                      type: array
                      items:
                        type: integer
                        description: Contact identifier
                - type: object
                  properties:
                    tag:
                      type: array
                      items:
                        type: string
                        description: Tag name
                    deal_id:
                      type: array
                      items:
                        type: integer
                        description: Deal identifier
      responses:
        200:
          description: Returns added tags
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tag'
        204:
          description: OK
        500:
          description: Internal server error.
  /crm.tag.list:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get tag cloud
      responses:
        200:
          description: Returns tags list.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tag'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.tag.remove:
    post:
      security:
        - BearerAuth: [ ]
      summary: Снятие тегов с контактов
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    tag:
                      type: array
                      items:
                        type: string
                        description: Tag name
                    contact_id:
                      type: array
                      items:
                        type: integer
                        description: Contact identifier
                - type: object
                  properties:
                    tag:
                      type: array
                      items:
                        type: string
                        description: Tag name
                    deal_id:
                      type: array
                      items:
                        type: integer
                        description: Deal identifier
      responses:
        204:
          description: OK
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.user.list:
    get:
      security:
        - BearerAuth: [ ]
      summary: Получение списка юзеров с доступом к CRM
      parameters:
        - in: query
          name: userpic_size
          description: Required size of userpic in pixels
          schema:
            type: integer
            default: 32
        - in: query
          name: can_own_contact
          description: Contact ID
          schema:
            type: integer
        - in: query
          name: can_own_deal
          description: Deal ID
          schema:
            type: integer
        - in: query
          name: with_rights
          description: Flag to get users rights
          schema:
            type: integer
            enum:
              - 1
              - 0
      responses:
        200:
          description: Returns user list.
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/contactMinimal'
                    - type: object
                      properties:
                        rights:
                          type: object
                          required:
                            - is_full
                          properties:
                            is_full:
                              type: boolean
                              description: Flag that user has full rights
                            vaults:
                              type: array
                              description: Vault list identifiers accessable by user
                              items:
                                type: integer
                                description: Vault identifier
                            funnels:
                              type: array
                              description: List of funnel access levels available to user
                              items:
                                type: object
                                description: Funnel access level
                                properties:
                                  funnel_id:
                                    type: integer
                                    description: Funnel identifier
                                  level:
                                    type: string
                                    description: |
                                      Access level
                                      + NO - no access
                                      + OWN - only own deals available
                                      + OWN+FREE - own deals and deals without owner available
                                      + FULL - full access to funnel
                                    enum:
                                      - NO
                                      - OWN
                                      - OWN+FREE
                                      - FULL
                            invoices:
                              type: string
                              description: |
                                Invoice access level
                                + NO - no access to invoices
                                + OWN - only own invloices available
                                + FULL - full access to invoices
                              enum:
                                - NO
                                - OWN
                                - FULL
                            calls:
                              type: string
                              description: |
                                Access level to calls
                                + NO - no access to calls
                                + OWN - only own calls available
                                + FULL - full access to calls
                              enum:
                                - NO
                                - OWN
                                - FULL
                            conversations:
                              type: string
                              description: |
                                Access level to conversations
                                + OWN - only own conversations available
                                + OWN+FREE - own conversations and conversations without owner available
                                + FULL - full access to conversations
                              enum:
                                - OWN
                                - OWN+FREE
                                - FULL
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        404:
          description: Content not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.user.me:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get current user info
      parameters:
        - in: query
          name: userpic_size
          description: Required size of userpic in pixels
          schema:
            type: integer
            default: 32
      responses:
        200:
          description: Returns current user info.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contactMinimal'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.user.settings.save:
    patch:
      security:
        - BearerAuth: [ ]
      summary: Update current user settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contact_list_columns:
                  description: Contact list columns
                  type: array
                  items:
                    type: object
                    required:
                      - field
                      - width
                    properties:
                      field:
                        type: string
                        description: Contact field identifier
                      width:
                        type: string
                        enum:
                          - s
                          - m
                          - l
                        description: |
                          Column width:
                          + s - small
                          + m - middle
                          + l - large
                contact_list_sort:
                  description: Contact list sort setting
                  type: object
                  properties:
                    field:
                      type: string
                      description: Contact field identifier
                    asc:
                      type: boolean
                      description: Sort direction
                deal_list_filter:
                  description: Deal list filter setting
                  type: object
                  required:
                    - funnel_id
                    - stage_id
                    - tag_id
                    - user_id
                  properties:
                    funnel_id:
                      type: integer
                      description: Funnel identifier
                      nullable: true
                    stage_id:
                      nullable: true
                      oneOf:
                        - type: integer
                          description: Funnel stage identifier
                        - type: string
                          enum:
                            - won
                            - lost
                          description: |
                            Deal status identifier
                            + won: won deal
                            + lost: lost deal
                    tag_id:
                      type: integer
                      description: Tag identifier
                      nullable: true
                    user_id:
                      type: integer
                      description: Responsible user identifier
                      nullable: true
                deal_list_sort:
                  description: Deal list sort setting
                  type: object
                  properties:
                    field:
                      type: string
                      description: Deal field identifier
                      enum:
                        - stage_id
                        - create_datetime
                        - reminder_datetime
                        - name
                        - amount
                        - user_name
                        - last_action
                    asc:
                      type: boolean
                      description: Sort direction
      responses:
        204:
          description: Success.
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.
  /crm.vault.list:
    get:
      security:
        - BearerAuth: [ ]
      summary: Get vaults list
      responses:
        200:
          description: Returns vaults list.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/vault'
        403:
          description: Access denied to the CRM app or this API method.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        400:
          description: Invalid request data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        500:
          description: Internal server error.

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  schemas:
    contact:
      type: object
      properties:
        id:
          type: integer
          description: The contact identifier
        main:
          type: object
          properties:
            name:
              type: string
              description: The contact composite name
            title:
              type: string
              description: The contact title
              nullable: true
            firstname:
              type: string
              description: The contact firstname
              nullable: true
            middlename:
              type: string
              description: The contact middlename
              nullable: true
            lastname:
              type: string
              description: The contact lastname
              nullable: true
            company:
              type: string
              description: The contact company name
              nullable: true
            company_contact_id:
              type: integer
              description: The contact company identifier
              nullable: true
            jobtitle:
              type: string
              description: The contact job title 
              nullable: true
            email:
              type: array
              description: Contact emails
              items:
                $ref: '#/components/schemas/fieldRecord'
            phone:
              type: array
              description: Contact phones
              items:
                $ref: '#/components/schemas/fieldRecord'
            url:
              type: array
              description: Contact websites
              items:
                $ref: '#/components/schemas/fieldRecord'
            address:
              type: array
              description: Contact addresses
              items:
                $ref: '#/components/schemas/address'
            socialnetwork:
              type: array
              description: Contact social network accounts
              items:
                $ref: '#/components/schemas/fieldRecord'
            im:
              type: array
              description: Contact instant messengers
              items:
                $ref: '#/components/schemas/fieldRecord'
            about:
              type: string
              description: Contact description
              nullable: true
            create_app:
              type: string
              description: The app name that created the contact
              nullable: true
            locale:
              type: string
              description: Readable contact locale
              nullable: true
            sex:
              type: string
              description: Readable contact sex
              nullable: true
            timezone:
              type: string
              description: Readable contact timezone name
              nullable: true
            birthday:
              type: object
              description: Contact birtday data
              nullable: true
              properties:
                value:
                  type: string
                  description: Readable birthday string
                date_parts:
                  type: object
                  description: Birthday date parts
                  properties:
                    year:
                      type: integer
                      nullable: true
                    month:
                      type: integer
                      nullable: true
                    day:
                      type: integer
                      nullable: true
        data:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
                description: Field identifier
              value:
                oneOf:
                  - type: string
                    description: Field value
                  - type: array
                    description: Composite field data
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          description: Subfield identifier
                        value:
                          type: string
                          nullable: true
                          description: Subfield value
              ext:
                type: string
                description: Field extention
        fields:
          type: array
          items:
            $ref: '#/components/schemas/fieldData'
        details:
          type: object
          properties:
            create_datetime:
              type: string
              format: date-time
              description: Date and time contact created at
            create_app_id:
              type: string
              description: Identifier of the app that created the contact
            create_method:
              type: string
              description: Identifier of the app method that created the contact
            create_contact_id:
              type: integer
              description: Identifier of the user who created the contact
            is_company:
              type: boolean
              description: Marker that the contact is company (not a person)
            company_contact_id:
              type: integer
              description: Company contact identifier (for persons only)
            is_user:
              type: boolean
              description: Marker that the contact is user
            is_banned:
              type: boolean
              description: Marker that the contact is blocked
            login:
              type: string
              description: Login (for users only)
              nullable: true
            has_password:
              type: boolean
              description: Marker that the contact has been registered (and may be authorized)
            last_datetime:
              type: string
              format: date-time
              description: Date and time contact was authorized
              nullable: true
            locale:
              type: string
              description: Contact locale ISO code
            timezone:
              type: string
              description: Contact timezone code
            sex:
              type: string
              description: Contact sex code
              nullable: true
              enum:
                - m
                - f
                - null
        is_editable:
          type: boolean
          description: Whether the current user may edit this contact
        is_pinned:
          type: boolean
          description: Pinned recent flag
        segments:
          type: array
          items:
            $ref: '#/components/schemas/segment'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/tag'
        userpic:
          type: object
          properties:
            original:
              type: string
              format: uri
            original_crop:
              type: string
              format: uri
            thumb:
              type: string
              format: uri
        creator:
          $ref: '#/components/schemas/contactMinimal'
          nullable: true
        responsible:
          $ref: '#/components/schemas/contactMinimal'
          nullable: true
        owners:
          type: array
          items:
            $ref: '#/components/schemas/contactMinimal'
        vault:
          $ref: '#/components/schemas/vault'
    contactMinimal:
      type: object
      properties:
        id:
          type: integer
          description: Contact identifier
        name:
          type: string
          description: Contact name
        userpic:
          type: string
          format: uri
          description: Contact userpic URL
    contactShort:
      type: object
      properties:
        id:
          type: integer
          description: Contact identifier
        create_datetime:
          type: string
          format: date-time
          description: Date and time contact was created at
        last_datetime:
          type: string
          format: date-time
          description: Date and time contact was authorized
          nullable: true
        name:
          type: string
          description: Contact name
        userpic:
          type: string
          format: uri
          description: Contact userpic URL
        online_status:
          type: string
          description: Contact online status
          enum:
            - offline
            - online
        company:
          type: string
          description: Contact company name
        jobtitle:
          type: string
          description: Contact job title
        company_contact_id:
          type: integer
          description: Company contact identifier
        tags:
          type: array
          description: Contact tags
          items:
            $ref: '#/components/schemas/tag'
        last_action:
          description: Last action linked to contact
          $ref: '#/components/schemas/logRecord'
        acl:
          type: string
          description: |
            Contact data access level
            + own - current user has exclusive access to contact data
            + group - enumerated group of users has access to contact data
            + vault - contact belongs to vault
            + all - contact data is freely accessible for all users
          enum:
            - own
            - group
            - vault
            - all
        is_pinned:
          type: boolean
          description: Pinned recent flag
          nullable: true
        is_banned:
          type: boolean
          description: Blocked contact flag
        vault_id:
          type: integer
          description: Vault ID
          nullable: true
        fields:
          type: array
          description: Requested set of contact fields
          items:
            type: object
            required:
              - id
              - value
            properties:
              id:
                type: string
                description: Field identifier
              value:
                oneOf:
                  - type: string
                    description: Readable field value
                  - type: array
                    description: Array of field readable values
                    items:
                      type: string
    logRecord:
      type: object
      properties:
        id:
          type: integer
          description: Log record identifier
        create_datetime:
          type: string
          format: date-time
          description: Date and time of record
        action:
          type: string
          description: Action identifier
        action_name:
          type: string
          description: Action name
        object_type:
          type: string
          description: Linket object type identifier
          enum:
            - CONTACT
            - DEAL
            - REMINDER
            - INVOICE
            - MESSAGE
            - NOTE
            - FILE
            - CALL
            - ORDER
        object_id:
          type: integer
          description: Linked object identifier
          nullable: true
        content:
          type: string
          description: Linked object content
        before:
          type: string
          description: Linked object data before action
          nullable: true
        after:
          type: string
          description: Linked object data after action
          nullable: true
        stage_before:
          description: Deal stage before action (only for deal stage change actions)
          $ref: '#/components/schemas/dealStage'
          nullable: true
        stage_after:
          description: Deal stage after action (only for deal stage change actions)
          $ref: '#/components/schemas/dealStage'
          nullable: true
        actor:
          description: Actor contact
          $ref: '#/components/schemas/contactMinimal'
          nullable: true
        contact:
          description: Linked contact
          $ref: '#/components/schemas/contactMinimal'
          nullable: true
        deal:
          description: Linked deal
          $ref: '#/components/schemas/dealShort'
          nullable: true
        message:
          description: Linked message
          $ref: '#/components/schemas/message'
        file:
          description: Linked file
          $ref: '#/components/schemas/file'
        reminder:
          description: Linked reminder
          $ref: '#/components/schemas/reminder'
        invoice:
          description: Linked invoice
          $ref: '#/components/schemas/invoice'
        call:
          description: Linked call
          $ref: '#/components/schemas/call'
        order_log_item:
          description: Linked Shop-Script order log record
          type: object
          properties:
            id:
              type: integer
              description: Log record identifier
            order_id:
              type: integer
              description: Order identifier
            contact_id:
              type: integer
              description: Actor contact identifier
            action_id:
              type: string
              description: Order action identifier
            datetime:
              type: string
              format: date-time
              description: Date and time of action
            before_state_id:
              type: string
              description: Order workflow state before action identifier
            after_state_id:
              type: string
              description: Order workflow state after action identifier
            text:
              type: string
              description: Action readable description
        order:
          description: Shop-Script order
          type: object
          properties:
            id:
              type: integer
              description: Order identifier
            contact_id:
              type: integer
              description: Order customer contact identifier
            create_datetime:
              type: string
              format: date-time
              description: Date and time of order creation
            update_datetime:
              type: string
              format: date-time
              description: Date and time of last order update
            state_id:
              type: string
              description: Order workflow state identifier
            total:
              type: number
              description: Order total amount
            currency:
              type: string
              description: Order amount currency ISO identifier
            rate:
              type: number
              description: Order amount currency rate
            tax:
              type: number
              description: Order tax value
            shipping:
              type: number
              description: Order shipping cost
            discount:
              type: number
              description: Order total discount amount
            assigned_contact_id:
              type: integer
              description: Order manager contact identifier
              nullable: true
            paid_datetime:
              type: string
              format: date-time
              description: Date and time of order paiment
              nullable: true
            comment:
              type: string
              description: Order comment
              nullable: true
            shipping_datetime:
              type: string
              format: date-time
              description: Date and time of order shipment
              nullable: true
            number:
              type: string
              description: Order readable number
            contact:
              description: Customer contact
              $ref: '#/components/schemas/contactMinimal'
        icon:
          description: Log record icon data
          type: object
          properties:
            fa:
              type: string
              description: Font Awesome icon name (Classic scope)
            fab:
              type: string
              description: Font Awesome icon name (Brands scope)
            color:
              type: string
              description: Icon color
            url:
              type: string
              format: uri
              description: Icon image URL
    invoice:
      type: object
      properties:
        contact:
          $ref: '#/components/schemas/contactMinimal'
        id:
          type: integer
          description: Invoice identifier
        create_datetime:
          type: string
          format: date-time
          description: Date and time invoice created at
        update_datetime:
          type: string
          format: date-time
          description: Date and time invoice last updated at
        number:
          type: string
          description: Invoice number
        invoice_date:
          type: string
          format: date
          description: Invoice date
        creator_contact_id:
          type: integer
          description: Invoice creator contact identifier
        company_id:
          type: integer
          description: Invoice company identifier
        contact_id:
          type: integer
          description: Client contact identifier
        deal_id:
          type: integer
          description: Deal identifier
        due_days:
          type: integer
          description: Number of invoice due days         
        due_date:
          type: string
          format: date
          description: Invoice due date
        amount:
          type: number
          description: Invoice total amount
        currency_id:
          type: string
          description: Invoice curency ISO identifier
        currency_rate:
          type: number
          description: Invoice curency rate
        tax_name:
          type: string
          description: Tax name
        tax_percent:
          type: number
          description: Tax value in percent
        tax_type:
          type: string
          description: Tax calculation type
          enum:
            - INCLUDE
            - APPEND
            - NONE
        tax_amount:
          type: number
          description: Tax total amount
        discount_percent:
          type: number
          description: Discount value in percent
        discount_amount:
          type: number
          description: Discount total amount
        summary:
          type: string
          description: Invoice items summary
        comment:
          type: string
          description: Invoice commant
        state_id:
          type: string
          description: Invoice state identifier
          enum:
            - PENDING
            - PAID
            - REFUNDED
            - ARCHIVED
            - DRAFT
            - PROCESSING
        state_name:
          type: string
          description: Invoice state readable name
        payment_datetime:
          type: string
          format: date-time
          description: Date and time invoice was paid
    invoiceItem:
      type: object
      properties:
        id:
          type: integer
          description: Invoice item identifier
        name:
          type: string
          description: Invoice item name
        price:
          type: number
          description: Invoice item price
        quantity:
          type: number
          description: Invoice item quantity
        tax_percent:
          type: number
          description: Tax value in percent
        tax_type:
          type: string
          description: Tax calculation type
          enum:
            - INCLUDE
            - APPEND
            - NONE
        product_id:
          type: string
          description: External product identifier
          nullable: true
    invoiceAuxData:
      type: object
      properties:
        creator:
          $ref: '#/components/schemas/contactMinimal'
        company:
          type: string
          description: Invoice company name
        items:
          type: array
          items:
            $ref: '#/components/schemas/invoiceItem'
    invoiceFullInfo:
      allOf:
        - $ref: '#/components/schemas/invoice'
        - $ref: '#/components/schemas/invoiceAuxData'
    reminder:
      type: object
      properties:
        id:
          type: integer
          description: Reminder identifier
        create_datetime:
          type: string
          format: date-time
          description: Date and time reminder created at
        creator_contact_id:
          type: integer
          description: Reminder creator contact identifier
        contact_id:
          type: integer
          description: Client contact identifier
          nullable: true
        deal_id:
          type: integer
          description: Deal identifier
          nullable: true
        user_contact_id:
          type: integer
          description: Contact identifier of the user for whom reminder was created
        due_date:
          type: string
          format: date
          description: Reminder due date
        due_datetime:
          type: string
          format: date-time
          description: Reminder due date & time
        complete_datetime:
          type: string
          format: date-time
          description: Date & time the reminder was completed at
          nullable: true
        content:
          type: string
          description: Reminder text description
        type:
          type: string
          description: Reminder type identifier
          enum:
            - MEETING
            - CALL
            - MESSAGE
            - OTHER
        state:
          type: string
          description: Reminder state
          enum:
            - completed
            - overdue
            - burn
            - actual
            - normal
        can_edit:
          type: boolean
          description: Reminder editing accessibility
        user:
          $ref: '#/components/schemas/contactMinimal'
        creator:
          $ref: '#/components/schemas/contactMinimal'
        contact:
          $ref: '#/components/schemas/contactMinimal'
          nullable: true
        deal:
          $ref: '#/components/schemas/dealShort'
          nullable: true
    conversation:
      type: object
      properties:
        id:
          type: integer
          description: Conversation identifier
        create_datetime:
          type: string
          format: date-time
          description: Date and time of coversation start
        update_datetime:
          type: string
          format: date-time
          description: Date and time of coversation last message
        type:
          type: string
          description: Transport type
          enum:
            - EMAIL
            - IM
        supported_features:
          type: object
          description: Supported message features
          properties:
            html:
              type: boolean
              description: Flag that body can be formatted
            attachments:
              type: boolean
              description: Flag that attachments is supported
            images: 
              type: boolean
              description: Flag that inline images is supported
        summary:
          type: string
          description: Conversation summary
        last_message_id:
          type: integer
          description: Last message in conversation identifier
        count:
          type: integer
          description: Number of messages in conversation
        is_closed:
          type: boolean
          description: Marker that the conversation is closed
        read:
          type: boolean
          description: Marker that all messages in the conversation is read by current user
        icon_url:
          type: string
          format: uri
          description: Transport icon URL
        icon:
          type: string
          description: Transport type FontAwesome icon
        icon_color:
          type: string
          description: Transport type icon color
        icon_fab:
          type: string
          description: Transport type FontAwesome icon from Brands scope
        transport_name:
          type: string
          description: Transport name
        can_view:
          type: boolean
          description: Marker that current user may read this conversation
        contact:
          description: Client contact
          $ref: '#/components/schemas/contactMinimal'
        user:
          description: User contact
          $ref: '#/components/schemas/contactMinimal'
        source:
          description: Conversation source
          $ref: '#/components/schemas/source'
        deal:
          description: Deal linked to the conversation
          $ref: '#/components/schemas/dealShort'
    dealShort:
      type: object
      properties:
        id:
          type: integer
          description: Deal identifier
        status_id:
          type: string
          description: Deal status
          enum:
            - OPEN
            - WON
            - LOST
        name:
          type: string
          description: Deal name
        amount:
          type: number
          description: Amount
        currency_id:
          type: string
          description: Currency identifier
        contact:
          $ref: '#/components/schemas/contactMinimal'
        funnel:
          $ref: '#/components/schemas/dealFunnel'
        stage:
          $ref: '#/components/schemas/dealStage'
    message:
      type: object
      properties:
        id:
          type: integer
          description: Message identifier
        creator_contact_id:
          type: integer
          description: Message creator contact identifier
        create_datetime:
          type: string
          format: date-time
          description: Date and time message created at
        transport:
          type: string
          description: Transport type
          enum:
            - EMAIL
            - IM
        direction:
          type: string
          description: Message direction (IN | OUT)
          enum:
            - IN
            - OUT
        conversation_id:
          type: integer
          description: Conversation identifier
        conversation_count:
          type: integer
          description: Number of messages in conversation
        subject:
          type: string
          description: Message subject
        body:
          type: string
          description: Message body (html)
        body_sanitized:
          type: string
          description: Sanitized message body (html)
        body_plain:
          type: string
          description: Plain text version message body
        from:
          type: string
          description: Address from
        to:
          type: string
          description: Address to
        original:
          type: boolean
          description: Marker that there is original source of the message
        contact:
          description: Message linked client contact
          $ref: '#/components/schemas/contactMinimal'
        deal:
          description: Message linked deal
          $ref: '#/components/schemas/dealShort'
        author:
          description: Message author contact
          $ref: '#/components/schemas/contactMinimal'
        conversation_participants:
          type: array
          items:
            $ref: '#/components/schemas/contactMinimal'
        source:
          description: Message source
          $ref: '#/components/schemas/source'
        recipients:
          type: object
          description: Message recipients
          properties:
            TO:
              type: array
              items:
                $ref: '#/components/schemas/recipient'
            CC:
              type: array
              items:
                $ref: '#/components/schemas/recipient'
            BCC:
              type: array
              items:
                $ref: '#/components/schemas/recipient'
        attachments:
          type: array
          description: Message attached files
          items:
            $ref: '#/components/schemas/file'
        extras:
          type: object
          description: Message inline objects
          properties:
            images:
              type: array
              description: Message inline images
              items:
                $ref: '#/components/schemas/file'
            stickers:
              type: array
              description: Message stickers
              items:
                $ref: '#/components/schemas/file'
            videos:
              type: array
              description: Message inline videos
              items:
                $ref: '#/components/schemas/file'
            audios:
              type: array
              description: Message inline audios
              items:
                $ref: '#/components/schemas/file'
            locations:
              type: array
              description: Message inline geographical locations
              items:
                type: object
                properties:
                  point:
                    type: string
                    description: Location coordinates - latitude,longitude
                  title:
                    type: string
                    description: Location title
                  address:
                    type: string
                    description: Location address
                  foursquare_id:
                    type: string
                    description: Location Foursquare venue identifier
        caption:
          description: Message inline object caption
          type: string
        read:
          type: boolean
          description: Is this message read by current user
        can_view:
          type: boolean
          description: Is curent user has rights to read this message
        event:
          type: string
          description: Event identifier (for event triggered messages only)
    recipient:
      type: object
      properties:
        destination:
          type: string
          description: Recipient address
        name:
          type: string
          description: Recipient name (as figured in the message)
        contact:
          description: Recipient contact
          $ref: '#/components/schemas/contactMinimal'
    deal:
      type: object
      properties:
        id:
          type: integer
          description: Deal identifier
        creator_contact_id:
          type: integer
          description: Deal creator contact identifier
        create_datetime:
          type: string
          format: date-time
          description: Date and time deal created at
        update_datetime:
          type: string
          format: date-time
          description: Date and time of deal last action
        reminder_datetime:
          type: string
          format: date-time
          description: Date and time of closest reminder
        funnel_id:
          type: integer
          description: Deal funnel identifier
        stage_id:
          type: integer
          description: Deal stage identifier
        status_id:
          type: string
          description: |
            Deal status
            + OPEN: Deal is open and in work
            + WON: Deal was successfully closed
            + LOST: Deal was unsuccessfully closed
          enum:
            - OPEN
            - WON
            - LOST
        name:
          type: string
          description: Deal name
        description:
          type: string
          description: Deal description (html)
        description_sanitized:
          type: string
          description: Deal description (cleared html)
        description_plain:
          type: string
          description: Deal description (plain-text version)
        expected_date:
          type: string
          format: date
          description: Date of expected deal close
        closed_datetime:
          type: string
          format: date-time
          description: Date and time of deal close
        amount:
          type: number
          description: Deal expected amount
        currency_id:
          type: string
          description: Deal currency
        currency_rate:
          type: number
          description: Deal amount currency rate
        contact_id:
          type: integer
          description: Main client contact identifier
        user_contact_id:
          type: integer
          description: Responsible user contact identifier
        lost_id:
          type: integer
          description: Standard lost reason identifier
        lost_text:
          type: string
          description: Custom lost reason
        external_id:
          type: string
          description: Deal source external identifier
        last_message_id:
          type: integer
          description: Last deal message identifier
        email:
          type: string
          description: Magic source email
        is_pinned:
          type: boolean
          description: Pinned recent flag
        rights:
          $ref: '#/components/schemas/dealUserRights'
        users:
          type: array
          description: Deal user contacts
          items:
            $ref: '#/components/schemas/dealUser'
        contacts:
          type: array
          description: Deal client contacts
          items:
            $ref: '#/components/schemas/dealClient'
        fields:
          type: array
          description: Additional deal data
          items:
            $ref: '#/components/schemas/fieldData'
        tags:
          type: array
          description: Deal tags
          items:
            $ref: '#/components/schemas/tag'
        source:
          description: Deal source
          $ref: '#/components/schemas/source'
        aux_tabs:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: String tab identifier
              title:
                type: string
                description: Tab title
              url:
                type: string
                format: uri
                description: URL frame with content
        aux_blocks:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: String block identifier
              title:
                type: string
                description: Block title
              html:
                type: string
                description: Block content
    dealParticipant:
      type: object
      properties:
        label:
          type: string
          description: Deal participant label
        assigned_at:
          type: string
          format: date-time
          description: The date and time the contact was connected to the deal
    dealUser:
      allOf:
        - $ref: '#/components/schemas/dealParticipant'
        - type: object
          properties:
            contact:
              $ref: '#/components/schemas/contactMinimal'
    dealClient:
      allOf:
        - $ref: '#/components/schemas/dealParticipant'
        - type: object
          properties:
            counters:
              type: object
              properties:
                deal:
                  type: string
                  description: Info about number of other contact deals
                shop_order:
                  type: string
                  description: Info about number of contact Shop-Script orders
            contact:
              allOf:
                - $ref: '#/components/schemas/contactMinimal'
                - type: object
                  properties:
                    jobtitle:
                      type: string
                      description: Contact job title
                    company:
                      type: string
                      description: Contact company name
                    company_contact_id:
                      type: integer
                      description: Contact company identifier
                    address:
                      type: array
                      description: Contact addresses
                      items:
                        type: object
                        description: ''
                        properties:
                          value:
                            type: string
                            description: Address string
                          map_url:
                            type: string
                            format: uri
                            description: Point to map
                    email:
                      type: array
                      nullable: true
                      description: Contact emails
                      items:
                        $ref: '#/components/schemas/fieldRecord'
                    phone:
                      type: array
                      nullable: true
                      description: Contact phones
                      items:
                        $ref: '#/components/schemas/fieldRecord'
    dealUserRights:
      type: object
      properties:
        has_access_to_funnel:
          type: boolean
          description: ''
        can_edit:
          type: boolean
          description: ''
        can_delete:
          type: boolean
          description: ''
        can_manage_responsible:
          type: boolean
          description: ''
    dealListRow:
      type: object
      properties:
        id:
          type: integer
          description: Deal identifier
        create_datetime:
          type: string
          format: date-time
          description: Date and time the deal was creted at
        update_datetime:
          type: string
          format: date-time
          description: Date and time the deal was last updated at
        reminder_datetime:
          type: string
          format: date-time
          description: Date and time of the deal closest reminder
        name:
          type: string
          description: The deal name
        funnel_id:
          type: integer
          description: The deal funnel identifier
        stage_id:
          type: integer
          description: The deal funnel stage identifier
        funnel:
          $ref: '#/components/schemas/dealFunnel'
        stage:
          $ref: '#/components/schemas/dealStage'
        status_id:
          type: string
          description: |
            Deal status
            + OPEN: Deal is open and in work
            + WON: Deal was successfully closed
            + LOST: Deal was unsuccessfully closed
          enum:
            - OPEN
            - WON
            - LOST
        expected_date:
          type: string
          format: date
          description: Date expected the deal will be closed at
        closed_datetime:
          type: string
          format: date-time
          description: Date and time the deal was closed at 
        amount:
          type: number
          nullable: true
          description: Deal amount value converted to carrency from app settings
        currency_id:
          type: string
          nullable: true
          description: Deal amount currency app settings ISO identifier
        currency_rate:
          type: number
          nullable: true
          description: Deal amount currency rate
        original_amount:
          type: number
          description: Deal amount value
        original_currency_id:
          type: string
          description: Deal amount currency ISO identifier
        lost_id:
          type: integer
          description: Standard lost reason identifier
        lost_text:
          type: string
          description: Custom lost reason
        external_id:
          type: string
          description: Deal source external identifier
        user:
          $ref: '#/components/schemas/contactMinimal'
        contact:
          $ref: '#/components/schemas/contactMinimal'
        source:
          description: The deal source
          $ref: '#/components/schemas/source'
        shop_order:
          type: object
          description: Shop-Script order linked to the deal
          properties:
            id:
              type: integer
              description: Order identifier
            paid_date:
              type: string
              format: date
              description: The date ordes was paid at
        can_delete:
          type: boolean
          description: Marker that current user can delete this deal
        reminder_state:
          type: string
        reminder_title:
          type: string
        message_unread:
          type: boolean
          description: Marker that exists the unred message (messages) in deal
        tags:
          type: array
          description: Deal tags
          items:
            $ref: '#/components/schemas/tag'
        last_action:
          description: Last action linked to deal
          $ref: '#/components/schemas/logRecord'
        fields:
          type: array
          description: Requested set of deal fields
          items:
            type: object
            required:
              - id
              - value
            properties:
              id:
                type: string
                description: Field identifier
              value:
                type: string
                description: Readable field value
    dealStage:
      type: object
      description: Deal stage
      properties:
        id:
          type: integer
          description: Stage identifier
        name:
          type: string
          description: Stage name
        color:
          type: string
          description: Stage color
    dealFunnel:
      type: object
      description: Deal funnel
      properties:
        id:
          type: integer
          description: Funnel identifier
        name:
          type: string
          description: Funnel name
        color:
          type: string
          description: Funnel color
    dealPin:
      type: object
      properties:
        id:
          type: integer
          description: Deal identifier
        name:
          type: string
          description: ''
        status_id:
          type: string
          description: ''
          enum:
            - OPEN
            - WON
            - LOST
        amount:
          type: number
          description: ''
        currency_id:
          type: string
          description: ''
        contact:
          $ref: '#/components/schemas/contactMinimal'
    call:
      type: object
      properties:
        id:
          type: integer
          description: Call identifier
        direction: 
          type: string
          description: Call direction (in or out)
          enum:
            - IN
            - OUT
        status_id: 
          type: string
          description: Call status
          enum:
            - PENDING
            - CONNECTED
            - FINISHED
            - DROPPED
            - REDIRECTED
            - VOICEMAIL
        create_datetime:
          type: string
          format: date-time
          description: Date and time the call was initiated
        finish_datetime:
          type: string
          format: date-time
          description: Date and time the call was finished
        plugin_id:
          type: string
          description: Telephony plugin identifier
        plugin_call_id:
          type: string
          description: Provider call identifier
        plugin_gateway:
          type: string
          description: Gateway phone number
        plugin_user_number:
          type: string
          description: User phone number as used in provider scheme
        plugin_client_number:
          type: string
          description: Client phone number as used in provider scheme
        client_phone_formatted:
          type: string
          description: Readable formatted client phone number
        plugin_record_id:
          type: string
          description: Call record provider identifier
        notification_sent:
          type: boolean
        deal_id:
          type: integer
          description: Deal identifier
        client_contact_id:
          type: integer
          description: Client contact identifier
        contact:
          $ref: '#/components/schemas/contactMinimal'
        user_contact_id:
          type: integer
          description: User contact identifier
        user:
          $ref: '#/components/schemas/contactMinimal'
        duration:
          type: integer
          description: Call duration in seconds
        comment:
          type: string
          description: Call comment
        has_access:
          type: boolean
        plugin_icon:
          type: string
          format: uri
          description: Provider icon URL
        plugin_name:
          type: string
          description: Provider plugin name
        redirect_allowed:
          type: boolean
    field:
      type: object
      required:
        - id
        - name
        - type
        - is_multi
        - is_unique
        - is_required
      properties:
        id:
          type: string
          description: Field string identifier
        name:
          type: string
          description: Field name for user locale
        type:
          $ref: '#/components/schemas/fieldType'
        is_multi:
          type: boolean
          description: Marker that field can be multiple
        is_unique:
          type: boolean
          description: Marker that field must be unique among all records
        is_required:
          type: boolean
          description: Marker that field must is required
        option_values:
          type: array
          description: Readable field values, cooresponding raw values (for select & radio field types only)
          items:
            $ref: '#/components/schemas/fieldOption'
        ext:
          type: array
          description: Enum for field extention values
          items:
            $ref: '#/components/schemas/fieldOption'
        fields:
          type: array
          description: Subfields (for composite fields only)
          items:
            $ref: '#/components/schemas/subField'
    subField:
      type: object
      required:
        - id
        - name
        - type
      properties:
        id:
          type: string
          description: Field string identifier
        name:
          type: string
          description: Field name for user locale
        type:
          $ref: '#/components/schemas/fieldType'
        options:
          type: array
          description: Enum for available raw field values (for select & radio field types only)
          items:
            type: string
        option_values:
          type: array
          description: Readable field values, corresponding raw values (for select & radio field types only)
          items:
            $ref: '#/components/schemas/fieldOption'
    fieldType:
      type: string
      description: Field type
      enum:
        - string
        - text
        - number
        - select
        - radio
        - checkbox
        - date
        - composite
    fieldOption:
      type: object
      required:
        - id
        - value
      properties:
        id:
          type: string
          description: Raw option value
        value:
          type: string
          description: Readable option value
    fieldData:
      oneOf:
        - $ref: '#/components/schemas/fieldDataSingle'
        - $ref: '#/components/schemas/fieldDataMulti'
    fieldDataSingle:
      type: object
      required:
        - id
        - name
        - type
        - value
        - data
      properties:
        id:
          type: string
          description: Field identifier
        name:
          type: string
          description: Field label
        type:
          $ref: '#/components/schemas/fieldType'
        value:
          type: string
          description: Field readable value
        data:
          type: string
          description: Field raw value
    fieldDataMulti:
      type: object
      required:
        - id
        - name
        - type
        - values
      properties:
        id:
          type: string
          description: Field identifier
        name:
          type: string
          description: Field label
        type:
          $ref: '#/components/schemas/fieldType'
        values:
          type: array
          description: Field values
          items:
            $ref: '#/components/schemas/fieldRecord'
    fieldRecord:
      type: object
      required:
        - value
        - data
      properties:
        value:
          type: string
          description: Field readable value
        data:
          description: Field value
          oneOf:
            - type: string
              description: Field raw value
            - type: array
              description: Composite subfields
              items:
                $ref: '#/components/schemas/fieldDataSingle'
        ext:
          type: string
          description: Field extention
        ext_value:
          type: string
          description: Field extention readable value
        status:
          type: string
          description: Field status
          nullable: true
    address:
      type: object
      properties:
        data:
          type: object
          properties:
            country:
              type: string
              description: Country ISO code
            country_value:
              type: string
              description: Readable country name
            zip:
              type: string
              description: Postcode
            region:
              type: string
              description: Region local code
            region_value:
              type: string
              description: Readable region name
            street:
              type: string
              description: Street, building, appartment
            city:
              type: string
              description: City/town/village name
            lat:
              type: string
              description: Geographical latitude
            lng:
              type: string
              description: Geographical longitude
        aux_data:
          type: array
          description: Additional address fields
          items:
            $ref: '#/components/schemas/fieldDataSingle'
        value:
          type: string
          description: Readable full address
        ext:
          type: string
          description: Address extention
        ext_value:
          type: string
          description: Readable address extention
        status:
          type: string
          description: Address status
          nullable: true
        map_url:
          type: string
          format: uri
          description: URL map
    segment:
      type: object
      properties:
        id:
          type: integer
          description: Segment identifier
        name:
          type: string
          description: Segment name
        count:
          type: integer
          description: Number of contacts in segment
        archived:
          type: boolean
          description: Marker that the segment is archived
        type:
          type: string
          description: Segment type (dynamic search or enumerated)
          enum:
            - category
            - search
        hash:
          type: string
          description: Search hash (for dynamic search segments only)
          nullable: true
        sort:
          type: integer
          description: Sort in list field
        create_datetime:
          type: string
          format: date-time
          description: Date and time the segment was created
        contact_id:
          type: integer
          description: Segment creator contact identifier
        shared:
          type: boolean
          description: Marker that the segment is shared
        icon:
          type: string
          description: Segment icon fontawesome name
          nullable: true
        icon_path:
          type: string
          format: uri
          description: Segment icon URL
          nullable: true
        app_id:
          type: string
          description: Segment creator app identifier
          nullable: true
        category_id:
          type: integer
          description: Contact category identifier (for category segments only)
          nullable: true
        system_id:
          type: string
          description: TODO - низнаю шта эта...
          nullable: true
        is_editable:
          type: boolean
          description: Marker that the segment can be edited by current user 
    tag:
      type: object
      properties:
        id:
          type: integer
          description: Tag identifier
        name:
          type: string
          description: The tag
        count:
          type: integer
          description: Number of tagged contacts and deals
        size:
          type: integer
          description: Relative tag size in tag cloud
        opacity:
          type: number
          description: Tag opacity in tag cloud
    file:
      type: object
      properties:
        id:
          type: integer
          description: File identifier
        name:
          type: string
          description: File name
        create_datetime:
          type: string
          format: date-time
          description: Date and time file created at
        size:
          type: integer
          description: File size in bytes
        ext:
          type: string
          description: File extention
        comment:
          type: string
          description: File comment
          nullable: true
        url:
          type: string
          format: uri
          description: File download URL
    source:
      type: object
      properties:
        id:
          type: integer
          description: Source identifier
        type:
          type: string
          description: Source type
          enum:
            - FORM
            - EMAIL
            - IM
            - SHOP
        name:
          type: string
          description: Source name
        provider:
          type: string
          description: Plugin identifier
        icon_url:
          type: string
          format: uri
          description: Plugin icon URL
        icon_fab:
          type: string
          description: Font Awesome icon name from Brands scope
        icon_color:
          type: string
          description: Icon color
    vault:
      type: object
      properties:
        id:
          type: integer
          description: Vault identifier
        name:
          type: string
          description: Vault name
        color:
          type: string
          description: Vault icon color
        create_datetime:
          type: string
          format: date-time
          description: Date & time the vault was created at
        count:
          type: integer
          description: Number of contacts in the vault
    errorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error code
        error_description:
          type: string
          description: Error description
